name: CI Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
name: CI Workflow

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  detect-changes:
    runs-on: ubuntu-latest
    outputs:
      frontend_changed: ${{ steps.filter.outputs.frontend }}
      backend_changed: ${{ steps.filter.outputs.backend }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Show event info for debug
        run: |
          echo "event_name=${{ github.event_name }}"
          echo "base_ref=${{ github.base_ref }}"
          echo "head_ref=${{ github.head_ref }}"

      - name: Run paths-filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            frontend:
              - 'frontend/**'
            backend:
              - 'backend/**'

      - name: Debug outputs
        run: |
          echo "frontend_changed=${{ steps.filter.outputs.frontend }}"
          echo "backend_changed=${{ steps.filter.outputs.backend }}"

  frontend-test:
    needs: detect-changes
    if: needs.detect-changes.outputs.frontend_changed == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: frontend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Use Node.js 22.11.0
        uses: actions/setup-node@v4
        with:
          node-version: '22.11.0'

      - name: Install dependencies
        run: npm ci

      - name: Run Format
        run: npm run format

      - name: Run ESLint
        run: npm run lint

      - name: Run test
        run: npm test

  backend-test:
    needs: detect-changes
    if: needs.detect-changes.outputs.backend_changed == 'true'
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: backend
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 21
        uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '21'

      - name: Cache Gradle dependencies
        uses: actions/cache@v4
        with:
          path: ~/.gradle/caches
          key: gradle-${{ runner.os }}-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
          restore-keys: |
            gradle-${{ runner.os }}-

      - name: Grant execute permission to Gradle wrapper
        run: chmod +x ./gradlew

      - name: Run tests
        run: ./gradlew test
