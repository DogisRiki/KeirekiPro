@startuml ログインシーケンス

!define RECTANGLE class

title ログインシーケンス

actor ユーザー
participant クライアント
participant アプリケーションサーバー as サーバー
participant DB
participant OAuthプロバイダー as OAuth

== Email + パスワード認証 ==

ユーザー -> クライアント: Emailとパスワードを入力し、ログインボタン押下
クライアント -> サーバー: ログインリクエスト (Email, パスワード)
サーバー -> DB: ユーザー情報をEmailから検索
DB --> サーバー: ユーザー情報
サーバー -> サーバー: パスワード検証
alt パスワードが一致する場合
    サーバー -> サーバー: JWTトークン生成
    サーバー -> クライアント: JWTトークン返却
    クライアント -> ユーザー: 職務経歴書一覧画面へ遷移
else パスワードが不一致の場合
    サーバー -> クライアント: エラーメッセージ返却
    クライアント -> ユーザー: ログイン失敗メッセージ表示
end

== OAuth2.0/OpenID Connect認証 ==

ユーザー -> クライアント: Gooleでログイン/Githubでログインボタン押下
クライアント -> OAuth: 認証リクエスト (クライアントID, リダイレクトURI)
OAuth --> ユーザー: 認証ページ表示
ユーザー -> OAuth: 認証情報を入力して許可
OAuth --> クライアント: 認可コード返却 (リダイレクトURI経由)
クライアント -> サーバー: 認可コードを含むコールバックリクエスト
サーバー -> OAuth: 認可コードでアクセストークンを取得
OAuth --> サーバー: アクセストークン返却
サーバー -> OAuth: アクセストークンでユーザー情報を取得
OAuth --> サーバー: ユーザー情報返却 (Email, ユーザー名, OAuthプロバイダーID 他)
サーバー -> DB: Emailでユーザー情報を検索
alt ユーザーが存在する場合
    サーバー -> DB: OAuth認証情報を追加/更新
else ユーザーが存在しない場合
    サーバー -> DB: 新規ユーザー登録
    サーバー -> DB: OAuth認証情報を追加
end
サーバー -> サーバー: JWTトークン生成
サーバー -> クライアント: JWTトークン返却
クライアント -> ユーザー: 職務経歴書一覧画面へ遷移

@enduml
